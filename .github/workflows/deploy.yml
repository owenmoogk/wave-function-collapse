name: Build, Test, and Deploy

on:
  push:
    branches:
      - '*'

    tags:
      - 'v*'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Compile Less to CSS
        run: npx less-watch-compiler src/less src/css --run-once
      
      - name: Build
        run: yarn build
      
      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

      - name: Archive build for release
        if: startsWith(github.ref, 'refs/tags/v')
        run: zip -r dist.zip dist/
      - name: Upload release artifact
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: dist-zip
          path: dist.zip

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Compile Less to CSS
        run: npx less-watch-compiler src/less src main.less --run-once
      
      - name: Run ESLint
        run: yarn lint
      
      - name: Type Check
        run: yarn typecheck

  release:
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            Automated release for ${{ github.ref_name }}.
            Includes build artifacts in dist-${{ github.ref_name }}.zip.
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist.zip
          asset_name: dist-${{ github.ref_name }}.zip
          asset_content_type: application/zip
  deploy:
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4